{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/cyf/registration-form/src/components/RegisterForm.js\";\nimport React from 'react';\nimport { NameAndPhone } from './steps/NameAndPhone';\nimport { EmailAndDob } from './steps/EmailAndDob';\nimport { Confirmation } from './steps/Confirmation';\nimport { Submit } from './steps/Submit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class RegisterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {},\n      step: 1,\n      fields: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        dob: \"\"\n      }\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n\n      if (this.handleValidation()) {\n        this.setState({\n          step: step + 1\n        });\n      }\n    };\n\n    this.previousStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = field => e => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    let counter = this.state.step; //FirstName\n\n    if (!fields[\"firstName\"]) {\n      formIsValid = false;\n      errors[\"firstNameEr\"] = \"first name cannot be empty\";\n    }\n\n    if (typeof fields[\"firstName\"] !== \"undefined\") {\n      if (!fields[\"firstName\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"firstNameEr\"] = \"Only letters accepted\";\n      }\n    } //lastName\n\n\n    if (!fields[\"lastName\"]) {\n      formIsValid = false;\n      errors[\"lastNameEr\"] = \"last name cannot be empty\";\n    }\n\n    if (typeof fields[\"lastName\"] !== \"undefined\") {\n      if (!fields[\"lastName\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"lastNameEr\"] = \"Only letters accepted\";\n      }\n    } //phone number\n    //10 number allowed\n\n\n    if (!fields[\"phoneNumber\"]) {\n      formIsValid = false;\n      errors[\"phoneNumberEr\"] = \"Phone number cannot be empty\";\n    }\n\n    if (typeof fields[\"phoneNumber\"] !== \"undefined\") {\n      //10 numbers format\n      var phoneNu = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n      if (!fields[\"phoneNumber\"].match(phoneNu)) {\n        formIsValid = false;\n        errors[\"phoneNumberEr\"] = \"Only numbers accepted\";\n      }\n    }\n\n    if (counter == 2) {\n      //Email\n      if (!fields[\"email\"]) {\n        formIsValid = false;\n        errors[\"emailEr\"] = \"email Cannot be empty\";\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n        let lastAtPos = fields[\"email\"].lastIndexOf('@');\n        let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"emailEr\"] = \"Email is not valid\";\n        }\n      } //dob\n\n\n      if (!fields[\"dob\"]) {\n        formIsValid = false;\n        errors[\"dobEr\"] = \"date of birth Cannot be empty\";\n      } //    if(typeof fields[\"dob\"] !== \"undefined\"){\n      //    if(!fields[\"dob\"].match(/^[a-zA-Z]+$/)){\n      //       formIsValid = false;\n      //       errors[\"dobEr\"] = \"dob number Only numbers\";\n      //    }        \n      // }\n\n\n      var date_regex = /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/;\n\n      if (!date_regex.test(fields[\"dob\"])) {\n        formIsValid = false;\n        errors[\"dobEr\"] = \"dob number Only numbers\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    const {\n      step,\n      errors\n    } = this.state;\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      dob\n    } = this.state.fields;\n    const values = {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      dob,\n      errors\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(NameAndPhone, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(EmailAndDob, {\n          nextStep: this.nextStep,\n          previousStep: this.previousStep,\n          handleChange: this.handleChange,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Confirmation, {\n          nextStep: this.nextStep,\n          previousStep: this.previousStep,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 23\n        }, this);\n    }\n  }\n\n}\nexport default RegisterForm;","map":{"version":3,"sources":["/home/mohamed/cyf/registration-form/src/components/RegisterForm.js"],"names":["React","NameAndPhone","EmailAndDob","Confirmation","Submit","RegisterForm","Component","state","errors","step","fields","firstName","lastName","email","phoneNumber","dob","nextStep","handleValidation","setState","previousStep","handleChange","field","e","target","value","formIsValid","counter","match","phoneNu","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","date_regex","test","render","values"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NameAndPhone } from './steps/NameAndPhone'\nimport { EmailAndDob } from './steps/EmailAndDob'\nimport { Confirmation } from './steps/Confirmation'\nimport { Submit } from './steps/Submit'\n\n\nexport  class RegisterForm extends React.Component  {\n           state = {\n                errors: {},\n               step:1,\n                fields: {\n               firstName:\"\",\n               lastName:\"\",\n               email:\"\",\n               phoneNumber:\"\",\n               dob:\"\"}\n           }\n         \n           handleValidation(){\n            let fields = this.state.fields;\n            let errors = {};\n            let formIsValid = true;\n            let counter = this.state.step\n\n            //FirstName\n            if(!fields[\"firstName\"]){\n               formIsValid = false;\n               errors[\"firstNameEr\"] = \"first name cannot be empty\";\n            }\n      \n            if(typeof fields[\"firstName\"] !== \"undefined\"){\n               if(!fields[\"firstName\"].match(/^[a-zA-Z]+$/)){\n                  formIsValid = false;\n                  errors[\"firstNameEr\"] = \"Only letters accepted\";\n               }        \n            }\n       //lastName\n           if(!fields[\"lastName\"]){\n               formIsValid = false;\n               errors[\"lastNameEr\"] = \"last name cannot be empty\";\n            }\n      \n            if(typeof fields[\"lastName\"] !== \"undefined\"){\n               if(!fields[\"lastName\"].match(/^[a-zA-Z]+$/)){\n                  formIsValid = false;\n                  errors[\"lastNameEr\"] = \"Only letters accepted\";\n               }        \n            }\n        //phone number\n        //10 number allowed\n           if(!fields[\"phoneNumber\"]){\n               formIsValid = false;\n               errors[\"phoneNumberEr\"] = \"Phone number cannot be empty\";\n            }\n      \n            if(typeof fields[\"phoneNumber\"] !== \"undefined\"){\n                //10 numbers format\n                var phoneNu = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n               if(!fields[\"phoneNumber\"].match(phoneNu)){\n                  formIsValid = false;\n                  errors[\"phoneNumberEr\"] = \"Only numbers accepted\";\n               }        \n            }\n            if(counter==2) {\n       //Email\n            if(!fields[\"email\"]){\n               formIsValid = false;\n               errors[\"emailEr\"] = \"email Cannot be empty\";\n            }\n      \n            if(typeof fields[\"email\"] !== \"undefined\"){\n               let lastAtPos = fields[\"email\"].lastIndexOf('@');\n               let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n               if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n                  formIsValid = false;\n                  errors[\"emailEr\"] = \"Email is not valid\";\n                }\n           }  \n            //dob\n            if(!fields[\"dob\"]){\n               formIsValid = false;\n               errors[\"dobEr\"] = \"date of birth Cannot be empty\";\n            }\n      \n            //    if(typeof fields[\"dob\"] !== \"undefined\"){\n            //    if(!fields[\"dob\"].match(/^[a-zA-Z]+$/)){\n            //       formIsValid = false;\n            //       errors[\"dobEr\"] = \"dob number Only numbers\";\n            //    }        \n           // }\n\n           var date_regex = /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/;\n                    if (!(date_regex.test(fields[\"dob\"]))) {\n                            formIsValid = false;\n                            errors[\"dobEr\"] = \"dob number Only numbers\";\n                    }\n\n            }\n     \n           this.setState({errors: errors});\n           return formIsValid;\n       }\n        \n           nextStep = () => {\n               const {step} =  this.state\n                   if(this.handleValidation()){\n                              this.setState({\n                                    step:step+1\n                                })\n                 \n            }\n             \n           }\n            previousStep = () => {\n               const {step} = this.state;\n               this.setState({\n                   step:step-1\n               })\n           }\n \n    handleChange =(field)=> (e)=>{         \n            let fields = this.state.fields;\n            fields[field] = e.target.value;        \n            this.setState({fields});\n        }\n\n\n    render () {\n        const {step,errors} = this.state\n        const {firstName,lastName,email,phoneNumber,dob} = this.state.fields\n        const values = {firstName,lastName,email,phoneNumber,dob,errors}\n        \n       \n        switch(step) {\n            case 1:\n                return(\n                    <NameAndPhone \n                        nextStep ={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                )\n            case 2:\n              return(\n                    <EmailAndDob\n                       nextStep ={this.nextStep}\n                       previousStep={this.previousStep}\n                        handleChange={this.handleChange}\n                        values={values}\n\n                    />\n              )\n              case 3:\n                  return (\n                      <Confirmation\n                        nextStep ={this.nextStep}\n                        previousStep={this.previousStep}\n                        values={values}\n                      />\n                  )\n              case 4:\n                  return (\n                      <Submit/>\n                  )\n\n        }\n        }\n  \n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}