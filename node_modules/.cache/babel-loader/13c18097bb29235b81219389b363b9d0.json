{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/cyf/registration-form/src/components/RegisterForm.js\";\nimport React from 'react';\nimport { NameAndPhone } from './steps/NameAndPhone';\nimport { EmailAndDob } from './steps/EmailAndDob';\nimport { Confirmation } from './steps/Confirmation';\nimport { Submit } from './steps/Submit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport class RegisterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: '',\n        dob: ''\n      },\n      step: 1,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      dob: \"\"\n    };\n\n    this.nextStep = () => {\n      const {\n        step,\n        firstName,\n        lastName,\n        phoneNumber,\n        error\n      } = this.state; //    if(firstName.length==0 ||typeof parseInt(firstName) == Number) {\n      //       if(!error.length) {\n      //       this.setState({\n      //        error:\"Pleas enter your first name\"\n      //      })\n      //       }else {\n      //        this.setState({\n      //        error:\"\"\n      //      })\n      //       }\n      //    }else if(lastName.length==0 ) {\n      //          alert(\"Pleas enter your last name\")\n      //    }else if(phoneNumber.length==0){\n      //            alert(\"Pleas enter your phone number\")\n      //    } else {\n      //        this.setState({\n      //        step:step+1\n      //    })\n      //  }\n    };\n\n    this.previousStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'firstName':\n          errors.firstName = value.length < 5 ? 'First Name must be 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      if (validateForm(this.state.errors)) {\n        console.info('Valid Form');\n      } else {\n        console.error('Invalid Form');\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        console.log(errors);\n      }); //  this.setState({\n      //      [input]:e.target.value\n      //  })\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      dob,\n      error\n    } = this.state;\n    const values = {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      dob,\n      error\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(NameAndPhone, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(EmailAndDob, {\n          nextStep: this.nextStep,\n          previousStep: this.previousStep,\n          handleChange: this.handleChange,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Confirmation, {\n          nextStep: this.nextStep,\n          previousStep: this.previousStep,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }, this);\n    }\n  }\n\n}\nexport default RegisterForm;","map":{"version":3,"sources":["/home/mohamed/cyf/registration-form/src/components/RegisterForm.js"],"names":["React","NameAndPhone","EmailAndDob","Confirmation","Submit","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","RegisterForm","Component","state","firstName","lastName","email","phoneNumber","dob","step","nextStep","error","previousStep","setState","handleChange","input","e","name","value","target","test","password","console","info","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NameAndPhone } from './steps/NameAndPhone'\nimport { EmailAndDob } from './steps/EmailAndDob'\nimport { Confirmation } from './steps/Confirmation'\nimport { Submit } from './steps/Submit'\n\n\nconst validEmailRegex = \n  RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n  const validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    // if we have an error string set valid to false\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\n  export  class RegisterForm extends React.Component  {\n           state = {\n                errors: {\n                firstName: '',\n                lastName:'',\n                email: '',\n                phoneNumber: '',\n                dob:''},\n               step:1,\n               firstName:\"\",\n               lastName:\"\",\n               email:\"\",\n               phoneNumber:\"\",\n               dob:\"\"\n           }\n\n           nextStep = () => {\n               const {step,firstName,lastName,phoneNumber,error} = this.state;\n            //    if(firstName.length==0 ||typeof parseInt(firstName) == Number) {\n            //       if(!error.length) {\n            //       this.setState({\n            //        error:\"Pleas enter your first name\"\n            //      })\n            //       }else {\n            //        this.setState({\n            //        error:\"\"\n            //      })\n            //       }\n               \n            //    }else if(lastName.length==0 ) {\n            //          alert(\"Pleas enter your last name\")\n              \n            //    }else if(phoneNumber.length==0){\n            //            alert(\"Pleas enter your phone number\")\n            //    } else {\n\n                \n             \n            //        this.setState({\n            //        step:step+1\n            //    })\n             //  }\n             \n           }\n            previousStep = () => {\n               const {step} = this.state;\n               this.setState({\n                   step:step-1\n               })\n           }\n\n           handleChange =(input)=> (e)=>{\n              const { name, value } = e.target;\n              let errors = this.state.errors;\n                switch (name) {\n                    case 'firstName': \n                    errors.firstName = \n                        value.length < 5\n                        ? 'First Name must be 5 characters long!'\n                        : '';\n                    break;\n                    case 'email': \n                    errors.email = \n                        validEmailRegex.test(value)\n                        ? ''\n                        : 'Email is not valid!';\n                    break;\n                    case 'password': \n                    errors.password = \n                        value.length < 8\n                        ? 'Password must be 8 characters long!'\n                        : '';\n                    break;\n                    default:\n                    break;\n                }\n                  \n                if(validateForm(this.state.errors)) {\n                    console.info('Valid Form')\n                   \n               \n                }else{\n                    console.error('Invalid Form')\n                }\n                  this.setState({errors, [name]: value}, ()=> {\n                        console.log(errors)\n                    })\n\n            //  this.setState({\n            //      [input]:e.target.value\n            //  })\n           }\n\n    render () {\n        const {step} = this.state\n        const {firstName,lastName,email,phoneNumber,dob,error} = this.state\n        const values = {firstName,lastName,email,phoneNumber,dob,error}\n       \n        switch(step) {\n            case 1:\n                return(\n                    <NameAndPhone \n                        nextStep ={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                )\n            case 2:\n              return(\n                    <EmailAndDob\n                       nextStep ={this.nextStep}\n                       previousStep={this.previousStep}\n                        handleChange={this.handleChange}\n                        values={values}\n\n                    />\n              )\n              case 3:\n                  return (\n                      <Confirmation\n                        nextStep ={this.nextStep}\n                        previousStep={this.previousStep}\n                        values={values}\n                      />\n                  )\n              case 4:\n                  return (\n                      <Submit/>\n                  )\n\n        }\n        }\n  \n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}